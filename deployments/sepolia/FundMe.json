{
  "address": "0xb66Bac14c50d70Fb421635513e1a444c68040A63",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc898214620f4ac161acd6ed11ab6bac71655535f1da9fd1dbf138668fceadc8b",
  "receipt": {
    "to": null,
    "from": "0x733a3F855F81ab645A1B4B04dd87E0d4F639C742",
    "contractAddress": "0xb66Bac14c50d70Fb421635513e1a444c68040A63",
    "transactionIndex": 62,
    "gasUsed": "1046083",
    "logsBloom": "0x
    "blockHash": "0x2356fdb3f136c87cd9b58baa3a8ab021eb922760f8fecc8fff56bb6c102bdc19",
    "transactionHash": "0xc898214620f4ac161acd6ed11ab6bac71655535f1da9fd1dbf138668fceadc8b",
    "logs": [],
    "blockNumber": 3545800,
    "cumulativeGasUsed": "3728092",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x694AA1769357215DE4FAC081bf1f309aDC325306"],
  "numDeployments": 2,
  "solcInputHash": "62835b9ca4154abf3e4388a9f93d75ef",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n  // Type Declarations\\n  using PriceConverter for uint256;\\n\\n  // State variables\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address[] private s_funders;\\n  // Could we make this constant?  /* hint: no! We should make it immutable! */\\n  address private immutable i_owner;\\n  uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n  AggregatorV3Interface private s_priceFeed;\\n\\n  // Modifiers\\n  modifier onlyOwner() {\\n    // require(msg.sender == owner);\\n    if (msg.sender != i_owner) revert FundMe__NotOwner();\\n    _;\\n  }\\n\\n  // Constructor\\n  constructor(address s_priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n  }\\n\\n  // Functions\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n      \\\"You need to spend more ETH!\\\"\\n    );\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n    s_funders.push(msg.sender);\\n  }\\n\\n  function withdraw() public onlyOwner {\\n    for (\\n      uint256 funderIndex = 0;\\n      funderIndex < s_funders.length;\\n      funderIndex++\\n    ) {\\n      address funder = s_funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  function cheaperWithdraw() public onlyOwner {\\n    address[] memory funders = s_funders;\\n    // mappings can't be in memory\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  // fallback() external payable {\\n  //   fund();\\n  // }\\n\\n  // receive() external payable {\\n  //   fund();\\n  // }\\n\\n  // Getters\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getFunder(uint256 index) public view returns (address) {\\n    return s_funders[index];\\n  }\\n\\n  function getAddressToAmountFunded(\\n    address funder\\n  ) public view returns (uint256) {\\n    return s_addressToAmountFunded[funder];\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n}\\n\",\"keccak256\":\"0x7adad9567d23d7e6c6a2f36f75481fcc767d01bf742c657b8e53d99032351382\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x61d960fea9e425e184ba809664cd0638379ec5fec6b8f61f3559022b0f970021\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200131438038062001314833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61118e62000186600039600081816101fd0152818161044c015281816105d601526107cc015261118e6000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101765761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610ac6565b6101b3565b6040516100b49190610b0c565b60405180910390f35b3480156100c957600080fd5b506100d26101fb565b005b3480156100e057600080fd5b506100e961043b565b6040516100f69190610b0c565b60405180910390f35b34801561010b57600080fd5b50610114610448565b6040516101219190610b36565b60405180910390f35b34801561013657600080fd5b5061013f610470565b60405161014c9190610bb0565b60405180910390f35b61015d61049a565b005b34801561016b57600080fd5b506101746105d4565b005b34801561018257600080fd5b5061019d60048036038101906101989190610bf7565b610898565b6040516101aa9190610b36565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610280576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561032b576000600182815481106102a6576102a5610c24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032390610c82565b915050610283565b50600067ffffffffffffffff81111561034757610346610ccb565b5b6040519080825280602002602001820160405280156103755781602001602082028036833780820191505090505b506001908051906020019061038b9291906109bc565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103b290610d2b565b60006040518083038185875af1925050503d80600081146103ef576040519150601f19603f3d011682016040523d82523d6000602084013e6103f4565b606091505b5050905080610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90610d9d565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104d9600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108e090919063ffffffff16565b101561051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610e09565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105689190610e29565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610659576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106dd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610693575b5050505050905060005b815181101561076757600082828151811061070557610704610c24565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075f90610c82565b9150506106e7565b50600067ffffffffffffffff81111561078357610782610ccb565b5b6040519080825280602002602001820160405280156107b15781602001602082028036833780820191505090505b50600190805190602001906107c79291906109bc565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080e90610d2b565b60006040518083038185875af1925050503d806000811461084b576040519150601f19603f3d011682016040523d82523d6000602084013e610850565b606091505b5050905080610894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088b90610d9d565b60405180910390fd5b5050565b6000600182815481106108ae576108ad610c24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108ec8361091c565b90506000670de0b6b3a764000085836109059190610e7f565b61090f9190610f08565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096557600080fd5b505afa158015610979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099d9190610fc6565b5050509150506402540be400816109b49190611041565b915050919050565b828054828255906000526020600020908101928215610a35579160200282015b82811115610a345782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109dc565b5b509050610a429190610a46565b5090565b5b80821115610a5f576000816000905550600101610a47565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9382610a68565b9050919050565b610aa381610a88565b8114610aae57600080fd5b50565b600081359050610ac081610a9a565b92915050565b600060208284031215610adc57610adb610a63565b5b6000610aea84828501610ab1565b91505092915050565b6000819050919050565b610b0681610af3565b82525050565b6000602082019050610b216000830184610afd565b92915050565b610b3081610a88565b82525050565b6000602082019050610b4b6000830184610b27565b92915050565b6000819050919050565b6000610b76610b71610b6c84610a68565b610b51565b610a68565b9050919050565b6000610b8882610b5b565b9050919050565b6000610b9a82610b7d565b9050919050565b610baa81610b8f565b82525050565b6000602082019050610bc56000830184610ba1565b92915050565b610bd481610af3565b8114610bdf57600080fd5b50565b600081359050610bf181610bcb565b92915050565b600060208284031215610c0d57610c0c610a63565b5b6000610c1b84828501610be2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c8d82610af3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cc057610cbf610c53565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d15600083610cfa565b9150610d2082610d05565b600082019050919050565b6000610d3682610d08565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d87600b83610d40565b9150610d9282610d51565b602082019050919050565b60006020820190508181036000830152610db681610d7a565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610df3601b83610d40565b9150610dfe82610dbd565b602082019050919050565b60006020820190508181036000830152610e2281610de6565b9050919050565b6000610e3482610af3565b9150610e3f83610af3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e7457610e73610c53565b5b828201905092915050565b6000610e8a82610af3565b9150610e9583610af3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ece57610ecd610c53565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1382610af3565b9150610f1e83610af3565b925082610f2e57610f2d610ed9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5881610f39565b8114610f6357600080fd5b50565b600081519050610f7581610f4f565b92915050565b6000819050919050565b610f8e81610f7b565b8114610f9957600080fd5b50565b600081519050610fab81610f85565b92915050565b600081519050610fc081610bcb565b92915050565b600080600080600060a08688031215610fe257610fe1610a63565b5b6000610ff088828901610f66565b955050602061100188828901610f9c565b945050604061101288828901610fb1565b935050606061102388828901610fb1565b925050608061103488828901610f66565b9150509295509295909350565b600061104c82610f7b565b915061105783610f7b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109657611095610c53565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d3576110d2610c53565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111105761110f610c53565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114d5761114c610c53565b5b82820290509291505056fea264697066735822122062d50cf328ed6b98afdcfb3575f91862d618b60c149d3c111e8ac1f8a23272e364736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101765761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610ac6565b6101b3565b6040516100b49190610b0c565b60405180910390f35b3480156100c957600080fd5b506100d26101fb565b005b3480156100e057600080fd5b506100e961043b565b6040516100f69190610b0c565b60405180910390f35b34801561010b57600080fd5b50610114610448565b6040516101219190610b36565b60405180910390f35b34801561013657600080fd5b5061013f610470565b60405161014c9190610bb0565b60405180910390f35b61015d61049a565b005b34801561016b57600080fd5b506101746105d4565b005b34801561018257600080fd5b5061019d60048036038101906101989190610bf7565b610898565b6040516101aa9190610b36565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610280576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561032b576000600182815481106102a6576102a5610c24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032390610c82565b915050610283565b50600067ffffffffffffffff81111561034757610346610ccb565b5b6040519080825280602002602001820160405280156103755781602001602082028036833780820191505090505b506001908051906020019061038b9291906109bc565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103b290610d2b565b60006040518083038185875af1925050503d80600081146103ef576040519150601f19603f3d011682016040523d82523d6000602084013e6103f4565b606091505b5050905080610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90610d9d565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104d9600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108e090919063ffffffff16565b101561051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610e09565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105689190610e29565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610659576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106dd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610693575b5050505050905060005b815181101561076757600082828151811061070557610704610c24565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075f90610c82565b9150506106e7565b50600067ffffffffffffffff81111561078357610782610ccb565b5b6040519080825280602002602001820160405280156107b15781602001602082028036833780820191505090505b50600190805190602001906107c79291906109bc565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080e90610d2b565b60006040518083038185875af1925050503d806000811461084b576040519150601f19603f3d011682016040523d82523d6000602084013e610850565b606091505b5050905080610894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088b90610d9d565b60405180910390fd5b5050565b6000600182815481106108ae576108ad610c24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108ec8361091c565b90506000670de0b6b3a764000085836109059190610e7f565b61090f9190610f08565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096557600080fd5b505afa158015610979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099d9190610fc6565b5050509150506402540be400816109b49190611041565b915050919050565b828054828255906000526020600020908101928215610a35579160200282015b82811115610a345782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109dc565b5b509050610a429190610a46565b5090565b5b80821115610a5f576000816000905550600101610a47565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9382610a68565b9050919050565b610aa381610a88565b8114610aae57600080fd5b50565b600081359050610ac081610a9a565b92915050565b600060208284031215610adc57610adb610a63565b5b6000610aea84828501610ab1565b91505092915050565b6000819050919050565b610b0681610af3565b82525050565b6000602082019050610b216000830184610afd565b92915050565b610b3081610a88565b82525050565b6000602082019050610b4b6000830184610b27565b92915050565b6000819050919050565b6000610b76610b71610b6c84610a68565b610b51565b610a68565b9050919050565b6000610b8882610b5b565b9050919050565b6000610b9a82610b7d565b9050919050565b610baa81610b8f565b82525050565b6000602082019050610bc56000830184610ba1565b92915050565b610bd481610af3565b8114610bdf57600080fd5b50565b600081359050610bf181610bcb565b92915050565b600060208284031215610c0d57610c0c610a63565b5b6000610c1b84828501610be2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c8d82610af3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cc057610cbf610c53565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d15600083610cfa565b9150610d2082610d05565b600082019050919050565b6000610d3682610d08565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d87600b83610d40565b9150610d9282610d51565b602082019050919050565b60006020820190508181036000830152610db681610d7a565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610df3601b83610d40565b9150610dfe82610dbd565b602082019050919050565b60006020820190508181036000830152610e2281610de6565b9050919050565b6000610e3482610af3565b9150610e3f83610af3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e7457610e73610c53565b5b828201905092915050565b6000610e8a82610af3565b9150610e9583610af3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ece57610ecd610c53565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1382610af3565b9150610f1e83610af3565b925082610f2e57610f2d610ed9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5881610f39565b8114610f6357600080fd5b50565b600081519050610f7581610f4f565b92915050565b6000819050919050565b610f8e81610f7b565b8114610f9957600080fd5b50565b600081519050610fab81610f85565b92915050565b600081519050610fc081610bcb565b92915050565b600080600080600060a08688031215610fe257610fe1610a63565b5b6000610ff088828901610f66565b955050602061100188828901610f9c565b945050604061101288828901610fb1565b935050606061102388828901610fb1565b925050608061103488828901610f66565b9150509295509295909350565b600061104c82610f7b565b915061105783610f7b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109657611095610c53565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d3576110d2610c53565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111105761110f610c53565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114d5761114c610c53565b5b82820290509291505056fea264697066735822122062d50cf328ed6b98afdcfb3575f91862d618b60c149d3c111e8ac1f8a23272e364736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
